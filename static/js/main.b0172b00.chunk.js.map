{"version":3,"sources":["routes/About.js","components/Movie.js","routes/Home.js","components/Navigation.js","routes/Detail.js","App.js","index.js"],"names":["About","props","console","log","className","Movie","title","year","summary","poster","genres","to","pathname","state","src","alt","map","genre","index","slice","Home","isLoading","movie","getMovies","a","axios","get","movies","data","setState","this","id","medium_cover_image","React","Component","Navigation","Detail","location","history","undefined","push","App","path","exact","component","ReactDOM","render","document","getElementById"],"mappings":"ySAgBeA,MAbf,SAAeC,GAEb,OADAC,QAAQC,IAAIF,GAEV,sBAAKG,UAAU,mBAAf,UACE,gJAIA,6D,gFCkCSC,MAvCf,YAA0D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,KAAMC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC7C,OACE,qBAAKN,UAAU,QAAf,SACE,eAAC,IAAD,CACEO,GAAI,CACFC,SAAU,gBACVC,MAAO,CAAEN,OAAMD,QAAOE,UAASC,SAAQC,WAH3C,UAME,qBAAKI,IAAKL,EAAQM,IAAKT,EAAOA,MAAOA,IACrC,sBAAKF,UAAU,cAAf,UACE,oBAAIA,UAAU,eAAd,SAA8BE,IAC9B,oBAAIF,UAAU,cAAd,SAA6BG,IAC7B,mBAAGH,UAAU,iBAAb,SAA+BI,IAC/B,oBAAIJ,UAAU,gBAAd,SACGM,EAAOM,KAAI,SAACC,EAAOC,GAClB,OACE,oBAAgBd,UAAU,eAA1B,SACGa,GADMC,QAOf,oBAAGd,UAAU,gBAAb,UAA8BI,EAAQW,MAAM,EAAG,KAA/C,SAA4D,aCiCvDC,G,kNAvDbP,MAAQ,CACNQ,WAAW,EACXC,MAAO,I,EAKTC,U,sBAAY,8BAAAC,EAAA,sEAMAC,IAAMC,IAEd,4DARQ,gBAIEC,EAJF,EAGRC,KACEA,KAAQD,OAOZ,EAAKE,SAAS,CAAEF,SAAQN,WAAW,IAXzB,2C,kEAgBVS,KAAKP,c,+BAGG,IAAD,EACuBO,KAAKjB,MAA3BQ,EADD,EACCA,UAAWM,EADZ,EACYA,OAEnB,OACE,yBAASvB,UAAU,YAAnB,SACGiB,EACC,qBAAKjB,UAAU,SAAf,SACE,sBAAMA,UAAU,eAAhB,0BAGF,qBAAKA,UAAU,SAAf,SACGuB,EAAOX,KAAI,SAACM,GAAD,OACV,cAAC,EAAD,CAEES,GAAIT,EAAMS,GACVxB,KAAMe,EAAMf,KACZD,MAAOgB,EAAMhB,MACbE,QAASc,EAAMd,QACfC,OAAQa,EAAMU,mBACdtB,OAAQY,EAAMZ,QANTY,EAAMS,e,GAzCRE,IAAMC,Y,MCQVC,MATf,WACE,OACE,sBAAK/B,UAAU,MAAf,UACE,cAAC,IAAD,CAAMO,GAAG,IAAT,kBACA,cAAC,IAAD,CAAMA,GAAG,SAAT,uBCYSyB,E,kLAjBQ,IAAD,EACYN,KAAK7B,MAA3BoC,EADU,EACVA,SAAUC,EADA,EACAA,aAEKC,IAAnBF,EAASxB,OACXyB,EAAQE,KAAK,O,+BAGP,IACAH,EAAaP,KAAK7B,MAAlBoC,SACR,OAAIA,EAASxB,MACJ,+BAAOwB,EAASxB,MAAMP,QAEtB,S,GAdQ2B,IAAMC,WCiBZO,MAXf,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWxB,IACxC,cAAC,IAAD,CAAOsB,KAAK,SAASE,UAAW5C,IAChC,cAAC,IAAD,CAAO0C,KAAK,gBAAgBE,UAAWR,QCT7CS,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b0172b00.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./About.css\";\r\n\r\nfunction About(props) {\r\n  console.log(props);\r\n  return (\r\n    <div className=\"about__container\">\r\n      <span>\r\n        “Freedom is the freedom to say that two plus two make four. If that is\r\n        granted, all else follows.”\r\n      </span>\r\n      <span>- George Orwell, 1984</span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Movie.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\n// Movie 컴포넌트\r\nfunction Movie({ title, year, summary, poster, genres }) {\r\n  return (\r\n    <div className=\"movie\">\r\n      <Link\r\n        to={{\r\n          pathname: \"/movie-detail\",\r\n          state: { year, title, summary, poster, genres },\r\n        }}\r\n      >\r\n        <img src={poster} alt={title} title={title} />\r\n        <div className=\"movie__data\">\r\n          <h3 className=\"movie__title\">{title}</h3>\r\n          <h5 className=\"movie__year\">{year}</h5>\r\n          <p className=\"movie__summary\">{summary}</p>\r\n          <ul className=\"movie__genres\">\r\n            {genres.map((genre, index) => {\r\n              return (\r\n                <li key={index} className=\"movie__genre\">\r\n                  {genre}\r\n                </li>\r\n              );\r\n            })}\r\n          </ul>\r\n          {/* 시놉시스 180자 제한 */}\r\n          <p className=\"movie__sumary\">{summary.slice(0, 180)}...</p>{\" \"}\r\n        </div>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nMovie.propTypes = {\r\n  year: PropTypes.number.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n  summary: PropTypes.string.isRequired,\r\n  poster: PropTypes.string.isRequired, // poster props : 이미지 주소(문자열)가 저장\r\n  genres: PropTypes.arrayOf(PropTypes.string).isRequired, // 장르\r\n};\r\n\r\nexport default Movie;\r\n","import React from \"react\"; // 이 코드를 입력해야 리액트가 JSX를 이해함\r\nimport axios from \"axios\";\r\nimport Movie from \"../components/Movie\";\r\nimport \"./Home.css\";\r\n\r\n// 클래스형 컴포넌트가 되려면 리액트가 제공하는 Component 클래스를 반드시 상속받아야 함\r\nclass Home extends React.Component {\r\n  // isLoading state는 컴포넌트가 마운트되면 true(처음에는 로딩 상태니까)\r\n  state = {\r\n    isLoading: true,\r\n    movie: [],\r\n  };\r\n\r\n  // async : 자바스크립트에게 getMovies()는 시간이 필요\r\n  // await : axios.get()의 실행을 기다려 달라고 말해줌\r\n  getMovies = async () => {\r\n    // 구조 분해 할당\r\n    const {\r\n      data: {\r\n        data: { movies },\r\n      },\r\n    } = await axios.get(\r\n      // 영화 데이터를 가져올 때는 axios.get() 함수를 사용\r\n      \"https://yts-proxy.now.sh/list_movies.json?sort_by=rating\"\r\n    );\r\n    // 키와 대입할 변수의 이름이 같으면 { movies }로 축약 가능\r\n    this.setState({ movies, isLoading: false }); // state: 구조 분해할당으로 얻은 영화 데이터가 있는 변수\r\n  };\r\n\r\n  componentDidMount() {\r\n    // 영화 데이터 로딩!\r\n    this.getMovies();\r\n  }\r\n\r\n  render() {\r\n    const { isLoading, movies } = this.state;\r\n    // map() 함수의 첫 번째 인자로 컴포넌트를 반환하는 함수를 전달\r\n    return (\r\n      <section className=\"container\">\r\n        {isLoading ? (\r\n          <div className=\"loader\">\r\n            <span className=\"loader__text\">Loading...</span>\r\n          </div>\r\n        ) : (\r\n          <div className=\"movies\">\r\n            {movies.map((movie) => (\r\n              <Movie\r\n                key={movie.id}\r\n                id={movie.id}\r\n                year={movie.year}\r\n                title={movie.title}\r\n                summary={movie.summary}\r\n                poster={movie.medium_cover_image}\r\n                genres={movie.genres}\r\n              />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\"; // Link 컴포넌트를 추가\r\nimport \"./Navigation.css\";\r\n\r\n// Navigation 컴포넌트\r\nfunction Navigation() {\r\n  return (\r\n    <div className=\"nav\">\r\n      <Link to=\"/\">Home</Link>\r\n      <Link to=\"/about\">About</Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\n\r\nclass Detail extends React.Component {\r\n  // Detail 컴포넌트가 마운트되면, (리다이렉트 기능)\r\n  componentDidMount() {\r\n    const { location, history } = this.props; // 구조 분해 할당으로 location, history를 얻고\r\n    // location.state가 없는 경우\r\n    if (location.state === undefined) {\r\n      history.push(\"/\"); // Home으로 이동\r\n    }\r\n  }\r\n  render() {\r\n    const { location } = this.props;\r\n    if (location.state) {\r\n      return <span>{location.state.title}</span>;\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport default Detail;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport About from \"./routes/About\";\nimport Home from \"./routes/Home\";\nimport Navigation from \"./components/Navigation\";\nimport Detail from \"./routes/Detail\";\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Navigation />\n      <Route path=\"/\" exact={true} component={Home} />\n      <Route path=\"/about\" component={About} />\n      <Route path=\"/movie-detail\" component={Detail} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'; // App 컴포넌트를 임포트해서 사용\n\n// ReactDOM.rander(컴포넌트명, 컴포넌트가 그려질 위치)\nReactDOM.render(<App />, document.getElementById('root'));\n\n// 인접한 JSX 요소는 반드시 하나의 태그로 감싸야 함"],"sourceRoot":""}